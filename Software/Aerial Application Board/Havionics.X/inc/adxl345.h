
#ifndef ADXL345_H
#define	ADXL345_H

#ifdef ADXL345_H_IMPORT
    #define ADXL345_EXTERN
#else
    #define ADXL345_EXTERN extern
#endif

#include "common.h"
#include "HardwareProfile.h"

#define ADXL345_ADDRESS (0x53)

/* ADXL345 REGISTERS */
#define ADXL345_RA_DEVID 0x00
#define ADXL345_RA_RESERVED1 0x01
#define ADXL345_RA_THRESH_TAP 0x1D
#define ADXL345_RA_OFSX 0x1E
#define ADXL345_RA_OFSY 0x1F
#define ADXL345_RA_OFSZ 0x20
#define ADXL345_RA_DUR 0x21
#define ADXL345_RA_LATENT 0x22
#define ADXL345_RA_WINDOW 0x23
#define ADXL345_RA_THRESH_ACT 0x24
#define ADXL345_RA_THRESH_INACT 0x25
#define ADXL345_RA_TIME_INACT 0x26
#define ADXL345_RA_ACT_INACT_CTL 0x27
#define ADXL345_RA_THRESH_FF 0x28
#define ADXL345_RA_TIME_FF 0x29
#define ADXL345_RA_TAP_AXES 0x2A
#define ADXL345_RA_ACT_TAP_STATUS 0x2B
#define ADXL345_RA_BW_RATE 0x2C
#define ADXL345_RA_POWER_CTL 0x2D
#define ADXL345_RA_INT_ENABLE 0x2E
#define ADXL345_RA_INT_MAP 0x2F
#define ADXL345_RA_INT_SOURCE 0x30
#define ADXL345_RA_DATA_FORMAT 0x31
#define ADXL345_RA_DATAX0 0x32
#define ADXL345_RA_DATAX1 0x33
#define ADXL345_RA_DATAY0 0x34
#define ADXL345_RA_DATAY1 0x35
#define ADXL345_RA_DATAZ0 0x36
#define ADXL345_RA_DATAZ1 0x37
#define ADXL345_RA_FIFO_CTL 0x38
#define ADXL345_RA_FIFO_STATUS 0x39

#define ADXL345_BW_LOWPOWER_BIT 4
#define ADXL345_BW_RATE_BIT 3
#define ADXL345_BW_RATE_LENGTH 4

#define ADXL345_RATE_3200 0b1111
#define ADXL345_RATE_1600 0b1110
#define ADXL345_RATE_800 0b1101
#define ADXL345_RATE_400 0b1100
#define ADXL345_RATE_200 0b1011
#define ADXL345_RATE_100 0b1010
#define ADXL345_RATE_50 0b1001
#define ADXL345_RATE_25 0b1000
#define ADXL345_RATE_12P5 0b0111
#define ADXL345_RATE_6P25 0b0110
#define ADXL345_RATE_3P13 0b0101
#define ADXL345_RATE_1P56 0b0100
#define ADXL345_RATE_0P78 0b0011
#define ADXL345_RATE_0P39 0b0010
#define ADXL345_RATE_0P20 0b0001
#define ADXL345_RATE_0P10 0b0000

#define ADXL345_PCTL_LINK_BIT 5
#define ADXL345_PCTL_AUTOSLEEP_BIT 4
#define ADXL345_PCTL_MEASURE_BIT 3
#define ADXL345_PCTL_SLEEP_BIT 2
#define ADXL345_PCTL_WAKEUP_BIT 1
#define ADXL345_PCTL_WAKEUP_LENGTH 2

#define ADXL345_INT_DATA_READY_BIT 7
#define ADXL345_INT_SINGLE_TAP_BIT 6
#define ADXL345_INT_DOUBLE_TAP_BIT 5
#define ADXL345_INT_ACTIVITY_BIT 4
#define ADXL345_INT_INACTIVITY_BIT 3
#define ADXL345_INT_FREE_FALL_BIT 2
#define ADXL345_INT_WATERMARK_BIT 1
#define ADXL345_INT_OVERRUN_BIT 0

#define ADXL345_FORMAT_SELFTEST_BIT 7
#define ADXL345_FORMAT_SPIMODE_BIT 6
#define ADXL345_FORMAT_INTMODE_BIT 5
#define ADXL345_FORMAT_FULL_RES_BIT 3
#define ADXL345_FORMAT_JUSTIFY_BIT 2
#define ADXL345_FORMAT_RANGE_BIT 1
#define ADXL345_FORMAT_RANGE_LENGTH 2

#define ADXL345_RANGE_2G 0b00
#define ADXL345_RANGE_4G 0b01
#define ADXL345_RANGE_8G 0b10
#define ADXL345_RANGE_16G 0b11

#define ADXL345_FIFO_MODE_BIT 7
#define ADXL345_FIFO_MODE_LENGTH 2
#define ADXL345_FIFO_TRIGGER_BIT 5
#define ADXL345_FIFO_SAMPLES_BIT 4
#define ADXL345_FIFO_SAMPLES_LENGTH 5

#define ADXL345_FIFO_MODE_BYPASS 0b00
#define ADXL345_FIFO_MODE_FIFO 0b01
#define ADXL345_FIFO_MODE_STREAM 0b10
#define ADXL345_FIFO_MODE_TRIGGER 0b11

#define ADXL345_FIFOSTAT_TRIGGER_BIT 7
#define ADXL345_FIFOSTAT_LENGTH_BIT 5
#define ADXL345_FIFOSTAT_LENGTH_LENGTH 6

#define ADXL345_TO_G_X (260)
#define ADXL345_TO_G_Y (260)
#define ADXL345_TO_G_Z (225)

#define ADXL345_CALIBRATE_BITSHIFT (9)
#define ADXL345_CALIBRATE_ITERATION (1 << ADXL345_CALIBRATE_BITSHIFT)

typedef struct {
    short int x_16bit;
    short int y_16bit;
    short int z_16bit;

    float x_float;
    float y_float;
    float z_float;

    short int bias_x_16bit;
    short int bias_y_16bit;
    short int bias_z_16bit;

    float bias_x_float;
    float bias_y_float;
    float bias_z_float;

}struct_adxl345;

#ifdef ADXL345_H_IMPORT
    typedef enum{
        ACCEL_Y,
        ACCEL_X,
        ACCEL_Z
    }ADXL345_CASE;
#endif

ADXL345_EXTERN struct_adxl345 adxl345_data;

ADXL345_EXTERN void ADXL345_setup(void);
ADXL345_EXTERN void ADXL345_readData(void);
ADXL345_EXTERN void ADXL345_calibrate(void);

// return member variables
ADXL345_EXTERN short int ADXL345_getx(void);
ADXL345_EXTERN short int ADXL345_gety(void);
ADXL345_EXTERN short int ADXL345_getz(void);

// formatted data
ADXL345_EXTERN float ADXL345_getxG(void);
ADXL345_EXTERN float ADXL345_getyG(void);
ADXL345_EXTERN float ADXL345_getzG(void);

ADXL345_EXTERN float ADXL345_getxG_f(void);
ADXL345_EXTERN float ADXL345_getyG_f(void);
ADXL345_EXTERN float ADXL345_getzG_f(void);

#endif	/* ADXL345_H */

